@page "/CreateEmpleados"
@rendermode InteractiveServer
@inject NavigationManager navigation
@inject EmpleadosService empleadosService
@inject DepartamentosService departamentosService
@inject PuestosTrabajoService puestosTrabajoService

<PageTitle>Crear Nuevo Empleado</PageTitle>
<EditForm Model="empleado" OnValidSubmit="Crear">
	<DataAnnotationsValidator />
	<div class="container">
		<div class="card shadow-lg">
			@*Header*@
			<div class="card-header">
				<h3><strong>Crear Nuevo Empleado</strong></h3>
			</div>
			@*Body*@
			<div class="card-body">
				@*Fila #1*@
				<div class="row mb-3">
					<div class="col-4">
						@*Empleado Id*@
						<label class="form-label" for="empleadoId"><strong>EmpleadoId:</strong></label>
						<InputNumber id="empleadoId" class="form-control" @bind-Value="empleado.EmpleadoId" readonly></InputNumber>
					</div>
					<div class="col-4">
						@*Nombre*@
						<label class="form-label" for="nombre"><strong>Nombre:</strong></label>
						<InputText id="nombre" class="form-control" @bind-Value="empleado.Nombre" placeholder="Ej: Juan"></InputText>
						<ValidationMessage For="@(() => empleado.Nombre)"></ValidationMessage>
					</div>
					<div class="col-4">
						@*Apellido*@
						<label class="form-label" for="apellido"><strong>Apellido:</strong></label>
						<InputText id="apellido" class="form-control" @bind-Value="empleado.Apellido" placeholder="Ej: Pérez"></InputText>
						<ValidationMessage For="@(() => empleado.Apellido)"></ValidationMessage>
					</div>
				</div>
				@*Fila #2*@
				<div class="row mb-3">
					<div class="col-4">
						@*Cedula*@
						<label class="form-label" for="cedula"><strong>C&eacute;dula:</strong></label>
						<InputText id="cedula" class="form-control" @bind-Value="empleado.Cedula" placeholder="Ej: 402-3457365-3"></InputText>
						<ValidationMessage For="@(() => empleado.Cedula)"></ValidationMessage>
					</div>
					<div class="col-4">
						@*Direccion*@
						<label class="form-label" for="direccion"><strong>Direcci&oacute;n:</strong></label>
						<InputText id="direccion" class="form-control" @bind-Value="empleado.Direccion" placeholder="Ej: C/ Sanchéz #19"></InputText>
						<ValidationMessage For="@(() => empleado.Direccion)"></ValidationMessage>
					</div>
					<div class="col-4">
						@*Telefono*@
						<label class="form-label" for="telefono"><strong>Tel&eacute;fono:</strong></label>
						<InputText id="telefono" class="form-control" @bind-Value="empleado.Telefono" placeholder="Ej: 829-284-3031"></InputText>
						<ValidationMessage For="@(() => empleado.Telefono)"></ValidationMessage>
					</div>
				</div>
				@*Fila #3*@
				<div class="row mb-3">
					<div class="col-4">
						@*Profesion*@
						<label class="form-label" for="profesion"><strong>Profesi&oacute;n:</strong></label>
						<InputText id="profesion" class="form-control" @bind-Value="empleado.Profesion" placeholder="Ej: Ingeniero en Sistemas"></InputText>
						<ValidationMessage For="@(() => empleado.Profesion)"></ValidationMessage>
					</div>
					<div class="col-4">
						@* Departamento *@
						<label class="form-label" for="departamento"><strong>Departamento:</strong></label>
						<InputSelect id="departamento" class="form-select" @bind-Value="empleado.DepartamentoId">
							<option value="0" disabled>Elije una opci&oacute;n</option>
							@foreach(var departamento in departamentos)
							{
								<option value="@departamento.DepartamentoId">@departamento.Departamento</option>
							}
						</InputSelect>
						<ValidationMessage For="@(() => empleado.DepartamentoId)"></ValidationMessage>
					</div>
					<div class="col-4">
						@* Puesto *@
						<label class="form-label" for="puesto"><strong>Puesto de Trabajo:</strong></label>
						<InputSelect id="puesto" class="form-select" @bind-Value="empleado.PuestoId">
							<option value="0" disabled>Elije una opci&oacute;n</option>
							@foreach (var puesto in puestosTrabajo)
							{
								<option value="@puesto.PuestoTrabajoId">@puesto.Puesto</option>
							}
						</InputSelect>
						<ValidationMessage For="@(() => empleado.PuestoId)"></ValidationMessage>
					</div>
				</div>
			</div>
			@*Footer*@
			<div class="card-footer d-flex justify-content-center">
				<div class="px-2">
					<button type="button" class="btn btn-outline-primary" @onclick="Volver"><i class="bi bi-box-arrow-left" /> Volver</button>
				</div>
				<button type="submit" class="btn btn-outline-success"><i class="bi bi-floppy-fill" /> Crear</button>
			</div>
		</div>
	</div>
</EditForm>

@code {
	public Empleados empleado { get; set; } = new Empleados();
	public List<Departamentos> departamentos = new List<Departamentos>();
	public List<PuestosTrabajo> puestosTrabajo = new List<PuestosTrabajo>();

	protected override async Task OnInitializedAsync()
	{
		await Task.Delay(500);
		departamentos = await departamentosService.Listar(d => true);
		puestosTrabajo = await puestosTrabajoService.Listar(d => true);
	}

	public async void Crear()
	{
		if (await Validar())
			return;
		else
		{
			var crear = await empleadosService.Crear(empleado);
			if (crear)
			{
				//mensaje = "El cliente se ha creado con exito";
				await Task.Delay(1000);
				Volver();
				//LimpiarPantalla();
			}
			// else
			// 	mensaje = "No se pudo crear el cliente correctamente";
		}

		StateHasChanged();
		await Task.Delay(2000);
		//await LimpiarPantalla();
	}

	public async Task<bool> Validar()
	{
		var valor = await empleadosService.Listar(e => e.EmpleadoId > 0);
		var cedula = valor.FirstOrDefault(e => e.Cedula == empleado.Cedula);
		var telefono = valor.FirstOrDefault(e => e.Telefono == empleado.Telefono);

		if (cedula != null)
		{
			//mensaje = "Error, ya existe un cliente con este nombre";
			return true;
		}
		if (telefono != null)
		{
			//mensaje = "Error, ya existe un cliente con este RNC";
			return true;
		}

		return false;
	}

	void Volver()
	{
		navigation.NavigateTo("/Empleados");
	}
}
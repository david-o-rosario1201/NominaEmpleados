@page "/DeleteEmpleados"
@page "/DeleteEmpleados/empleadoId={empleadoId:int}"
@rendermode InteractiveServer
@inject NavigationManager navigation
@inject EmpleadosService empleadosService

<PageTitle>Eliminar Empleado</PageTitle>
<div class="container">
	<div class="card shadow-lg">
		@*Header*@
		<div class="card-header">
			<h3><strong>Eliminar Empleado</strong></h3>
		</div>
		@*Body*@
		<div class="card-body">
			<h4><strong>¿Est&aacute;s seguro de que quieres eliminar a este empleado?</strong></h4>
			@*Datos*@
			<ul>
				<li><strong>EmpleadoId:</strong> @empleado.EmpleadoId</li>
				<li><strong>Nombre:</strong> @empleado.Nombre @empleado.Apellido</li>
				<li><strong>C&eacute;dula:</strong> @empleado.Cedula</li>
				<li><strong>Direcci&oacute;n:</strong> @empleado.Direccion</li>
				<li><strong>Tel&eacute;fono:</strong> @empleado.Telefono</li>
				<li><strong>Profesi&oacute;n:</strong> @empleado.Profesion</li>
				<li><strong>Departamento:</strong> @empleado.Departamento</li>
				@* <li><strong>Puesto:</strong> @empleado.Puesto</li> *@
			</ul>
		</div>
		@*Footer*@
		<div class="card-footer d-flex justify-content-center">
			<div class="px-2">
				<button type="button" class="btn btn-outline-danger" @onclick="Volver"><i class="bi bi-box-arrow-left" /> Volver</button>
			</div>
			<button type="button" class="btn btn-outline-dark" @onclick="Eliminar"><i class="bi bi-floppy-fill" /> Eliminar</button>
		</div>
	</div>
</div>

@code {
	[Parameter]
	public int empleadoId { get; set; }
	public Empleados empleado { get; set; } = new Empleados();

	protected override async Task OnInitializedAsync()
	{
		await Task.Delay(500);
		empleado = await empleadosService.Buscar(empleadoId);
	}

	public async void Eliminar()
	{
		//var crear = 
		await empleadosService.Eliminar(empleadoId);
		await Task.Delay(1000);
		Volver();
		// if (crear)
		// {
		// 	//mensaje = "El cliente se ha creado con exito";
		// 	await Task.Delay(2000);
		// 	//LimpiarPantalla();
		// }
		// else
		// 	mensaje = "No se pudo crear el cliente correctamente";

		StateHasChanged();
		await Task.Delay(1000);
		//await LimpiarPantalla();
	}

	void Volver()
	{
		navigation.NavigateTo("/Empleados");
	}
}